

import java.util.Arrays;
import java.util.Scanner;
public class CodeForces {
    static int max = Integer.MAX_VALUE;
    static long maxValue=Integer.MAX_VALUE;

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int a[] = new int[n];
        long sum = 0;
        int b[] = new int[n];
        long va[][] = new long[n][4];

for(int i=0;i<n;i++)
{
    for(int j=0;j<4;j++)
    {
        va[i][j]=-18;
    }
}




        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
            sum += a[i];
        }

        for (int i = 0; i < n; i++) b[i] = sc.nextInt();
long ans = find(a,b,0,n-1,0,a[n-1]+2,va);
if(ans<=Integer.MAX_VALUE)
        System.out.println(ans);
else
    System.out.println("-1");



    }



    private static long find(int[] a, int[] b, int count, int i,int v,int val,long va[][]) {
if(count==3)
{
    //System.out.println("here");
    return 0;

}

if(i<0)
    return Long.MAX_VALUE/1000;

int k =count-3;
if(k<3 && k>=0 && va[i][k]!=-18)
    return va[i][k];

long sum = Long.MAX_VALUE;
        if(a[i]<val)
        {
long aa = b[i]+find(a,b,count+1,i-1,0,a[i],va);
long bb=b[i]+find(a,b,1,i-1,0,a[i],va);
        long cc=find(a,b,count,i-1,v,val,va);
        long d=Math.min(aa,bb);
        sum= Math.min(d,cc);
        }else
        {
            long bb=b[i]+find(a,b,1,i-1,0,a[i],va);
            long cc=find(a,b,count,i-1,v,val,va);
            sum= Math.min(bb,cc);
        }







va[i][count]=sum;
return sum;


    }


}
