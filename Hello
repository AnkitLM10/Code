import java.io.*;
import java.util.*;
 class CodeForces {
    static int max = 0;
    static int ii = -1;
    static int jj = -1;
    static int n1 = 0, n2 = 0;
    static char op1 = ' ', op2 = ' ', op3 = ' ', op4 = ' ';


    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new
                    InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }


    public static void main(String[] args) {

        FastReader sc = new FastReader();

        int t = sc.nextInt();
        for (int u = 0; u < t; u++) {
            int n = sc.nextInt();
            long k = sc.nextLong();
            int a[] = new int[n];
            for (int i = 0; i < n; i++)
                a[i] = sc.nextInt();
            long v=(k-1)/n;
            long j=v%3;

            if(j==0)
            {
                if(k-1<=n)
                {
                    for(int i=0;i<((k%n)==0?n-1:k%n);i++)
                    {
                        a[i]=a[i]%a[n-(i%n)-1];
                    }

                }
                else
                {

                    for(int i=0;i<n;i++)
                        a[i]=a[i]^a[n-(i%n)-1];
                    for(int i=0;i<n;i++)
                        a[i]=a[i]^a[n-(i%n)-1];
                    for(int i=0;i<n;i++)
                        a[i]=a[i]^a[n-(i%n)-1];
                    for(int i=0;i<((k%n)==0?n-1:k%n);i++)
                    {
                        a[i]=a[i]^a[n-(i%n)-1];
                    }


                }



            }
            else if(j==1)
            {

                for(int i=0;i<n;i++)
                    a[i]=a[i]^a[n-(i%n)-1];
                for(int i=0;i<((k%n)==0?n-1:k%n);i++)
                {
                    a[i]=a[i]^a[n-(i%n)-1];
                }






            }
            else
            {
                for(int i=0;i<n;i++)
                    a[i]=a[i]^a[n-(i%n)-1];
                for(int i=0;i<n;i++)
                    a[i]=a[i]^a[n-(i%n)-1];
                for(int i=0;i<((k%n)==0?n-1:k%n);i++)
                {
                    a[i]=a[i]^a[n-(i%n)-1];
                }


            }

            for(int i:a)
                System.out.print(i+" ");
            System.out.println();


        }


    }

}
